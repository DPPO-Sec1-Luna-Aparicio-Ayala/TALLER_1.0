
package loader;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import modelo.Combos;

public class LoaderBurgers
{

	public static calculator cargarArchivo(String archivo1, String archivo2,String archivo3) throws FileNotFoundException, IOException
	{
		Map<String, Combos> combo = new HashMap<>();
		Map<String, Integer> ingredientes = new HashMap<>();
		Map<String, Integer> menu = new HashMap<>();

		// Abrir el archivo y leerlo línea por línea usando un BufferedReader
		BufferedReader br1 = new BufferedReader(new FileReader(archivo1));
		String linea1 = br1.readLine(); // La primera línea del archivo se ignora porque únicamente tiene los títulos de
									// las columnas
		BufferedReader br2 = new BufferedReader(new FileReader(archivo2));
		String linea2 = br2.readLine();
		
		BufferedReader br3 = new BufferedReader(new FileReader(archivo3));
		String linea3 = br3.readLine();
		
		
		while (linea1 != null) // Cuando se llegue al final del archivo, linea tendrá el valor null
		{
			// Separar los valores que estaban en una línea
			String[] partes = linea1.split(";");
			String nombreCombo = partes[0];
			String descuento = partes[1];
			String hamburguesa = partes[2];
			String papas = partes[3];
			String bebida = partes[4];
			

			// Si no se había encontrado antes a ese atleta, se agrega como un nuevo atleta.
			// Acá suponemos que no hay atletas con el mismo nombre
			Combos elCombo = combos.get();
			if (elAtleta == null)
			{
				elAtleta = new Atleta(nombreAtleta, genero, elPais);
				elPais.agregarAtleta(elAtleta);
				atletas.put(nombreAtleta, elAtleta);
			}

			// Si no se había encontrado antes este evento, se agrega como uno nuevo.
			// Los eventos se identifican por su nombre y el año.
			Evento elEvento = buscarEvento(eventos, nombreEvento, anio);
			if (elEvento == null)
			{
				elEvento = new Evento(nombreEvento, anio);
				eventos.add(elEvento);
			}

			// Registra la participación del atleta en el evento, incluyendo el resultado
			// alcanzado (medalla de oro, plata, bronce o ninguna - na).
			Participacion laParticipacion = new Participacion(elAtleta, edad, elEvento, laMedalla);
			elAtleta.agregarParticipacion(laParticipacion);
			elEvento.agregarParticipacion(laParticipacion);

			linea = br.readLine(); // Leer la siguiente línea
		}

		br.close();

		System.out.println(eventos);
		CalculadoraEstadisticas calculadora = new CalculadoraEstadisticas(atletas, paises, eventos);
		return calculadora;
	}
