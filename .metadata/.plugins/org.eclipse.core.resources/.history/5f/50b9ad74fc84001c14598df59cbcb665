
package loader;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;

public class LoaderBurgers
{

	public static calculator cargarArchivo(String nombreArchivo) throws FileNotFoundException, IOException
	{
		Map<String, Atleta> atletas = new HashMap<>();
		Map<String, Pais> paises = new HashMap<>();
		List<Evento> eventos = new ArrayList<>();

		// Abrir el archivo y leerlo línea por línea usando un BufferedReader
		BufferedReader br = new BufferedReader(new FileReader(nombreArchivo));
		String linea = br.readLine(); // La primera línea del archivo se ignora porque únicamente tiene los títulos de
										// las columnas
		linea = br.readLine();
		while (linea != null) // Cuando se llegue al final del archivo, linea tendrá el valor null
		{
			// Separar los valores que estaban en una línea
			String[] partes = linea.split(",");
			String nombreAtleta = partes[0];
			Genero genero = partes[1].equals("m") ? Genero.MASCULINO : Genero.FEMENINO;
			int edad = Integer.parseInt(partes[2]);
			String nombrePais = partes[3];
			int anio = Integer.parseInt(partes[4]);
			String nombreEvento = partes[5];
			Medalla laMedalla = Medalla.valueOf(partes[6].toUpperCase());

			// Si el país no existe, lo agrega a la lista de paises
			Pais elPais = paises.get(nombrePais);
			if (elPais == null)
			{
				elPais = new Pais(nombrePais);
				paises.put(nombrePais, elPais);
			}

			// Si no se había encontrado antes a ese atleta, se agrega como un nuevo atleta.
			// Acá suponemos que no hay atletas con el mismo nombre
			Atleta elAtleta = atletas.get(nombreAtleta);
			if (elAtleta == null)
			{
				elAtleta = new Atleta(nombreAtleta, genero, elPais);
				elPais.agregarAtleta(elAtleta);
				atletas.put(nombreAtleta, elAtleta);
			}

			// Si no se había encontrado antes este evento, se agrega como uno nuevo.
			// Los eventos se identifican por su nombre y el año.
			Evento elEvento = buscarEvento(eventos, nombreEvento, anio);
			if (elEvento == null)
			{
				elEvento = new Evento(nombreEvento, anio);
				eventos.add(elEvento);
			}

			// Registra la participación del atleta en el evento, incluyendo el resultado
			// alcanzado (medalla de oro, plata, bronce o ninguna - na).
			Participacion laParticipacion = new Participacion(elAtleta, edad, elEvento, laMedalla);
			elAtleta.agregarParticipacion(laParticipacion);
			elEvento.agregarParticipacion(laParticipacion);

			linea = br.readLine(); // Leer la siguiente línea
		}

		br.close();

		System.out.println(eventos);
		CalculadoraEstadisticas calculadora = new CalculadoraEstadisticas(atletas, paises, eventos);
		return calculadora;
	}
